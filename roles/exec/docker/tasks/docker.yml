---
# vim: set filetype=ansible syntax=yaml ts=2 sts=2 sw=2 expandtab autoindent:

- name: Create /etc/docker
  file:
    path: /etc/docker
    owner: root
    group: '{{ ansible_local.root_owner.group }}'
    mode: 0755
    state: directory
  check_mode: false

- name: Install Docker daemon config
  template:
    src: docker-daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: '{{ ansible_local.root_owner.group }}'
    mode: 0644
  notify:
    - reload docker

- name: Install docker-compose service unit
  template:
    src: docker-compose.service.j2
    dest: /usr/local/lib/systemd/system/docker-compose@.service
    owner: root
    group: '{{ ansible_local.root_owner.group }}'
    mode: 0644
  notify:
    - reload systemd

- name: Create docker-compose file storage directory
  file:
    path: '{{ storage_mnt_base }}/docker-compose'
    owner: '{{ user }}'
    group: '{{ user }}'
    mode: 0755
    state: directory

- name: Install main Caddyfile
  template:
    src: caddyfile.j2
    dest: /etc/caddy/Caddyfile
    owner: root
    group: '{{ ansible_local.root_owner.group }}'
    mode: 0644
  when: docker_services|selectattr("install_proxy")|select|list|length > 0
  notify:
    - reload caddy

- name: Load docker-compose role vars
  include_vars: '{{ item }}'
  loop: '{{ docker_services | map(attribute="service") | map("format_map", "roles/config/{0}/vars/main") | map("fileglob") | list | flatten }}'

- name: Install docker-compose file
  template:
    src: '{{ item.service }}.yaml.j2'
    dest: '{{ storage_mnt_base }}/docker-compose/{{ item.service }}.yaml'
    owner: '{{ user }}'
    group: '{{ user }}'
    mode: 0644
  when: item.install_compose
  loop: '{{ docker_services }}'

- name: Install Docker proxy caddyfile
  template:
    src: '{{ item.service }}.caddyfile.j2'
    dest: '/etc/caddy/Caddyfile.d/{{ item.service }}.caddyfile'
    owner: root
    group: '{{ ansible_local.root_owner.group }}'
    mode: 0644
  when: item.install_proxy
  notify:
    - reload caddy
  loop: '{{ docker_services }}'

- name: Install extra Docker service requirements
  include_role:
    name: '{{ item }}'
  loop: '{{ docker_services | map(attribute="service") | map("format_map", "roles/exec/{0}") | map("fileglob") | list | flatten }}'
