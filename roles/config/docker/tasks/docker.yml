---
# vim: set filetype=yaml.ansible expandtab sts=2 sw=2 nospell:

- name: Queue Docker iptables rules
  set_fact:
    iptables_rules: '{{ iptables_rules + docker_iptables_rules }}'
  when: docker_services|selectattr("install_proxy")|select|list|length > 0

- name: Queue Docker Fedora repo install
  set_fact:
    remote_repos: '{{ remote_repos + [{"url": "https://download.docker.com/linux/fedora/docker-ce.repo", "file": "docker-ce.repo"}] }}'
  when: ansible_facts["distribution"] == "Fedora"

- name: Queue Docker CentOS repo install
  set_fact:
    remote_repos: '{{ remote_repos + [{"url": "https://download.docker.com/linux/centos/docker-ce.repo", "file": "docker-ce.repo"}] }}'
  when: ansible_facts["distribution"] == "CentOS"

- name: Queue Docker Debian repo key
  set_fact:
    repo_keys: '{{ repo_keys + [{"url": "https://download.docker.com/linux/debian/gpg", "file": "docker.asc"}] }}'
  when: ansible_facts["distribution"] == "Debian"

- name: Queue Docker Debian repo install
  set_fact:
    repos: '{{ repos + [{"repo": "deb [arch=arm64] https://download.docker.com/linux/debian bullseye stable", "file": "docker"}] }}'
  when: ansible_facts["distribution"] == "Debian"

- name: Queue Caddy Debian repo key
  set_fact:
    repo_keys: '{{ repo_keys + [{"url": "https://dl.cloudsmith.io/public/caddy/stable/gpg.key", "file": "caddy-stable.asc"}] }}'
  when:
    - ansible_facts["distribution"] == "Debian"
    - docker_services|selectattr("install_proxy")|select|list|length > 0

- name: Queue Debian Caddy repo install
  set_fact:
    remote_repos: '{{ remote_repos + [{"url": "https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt", "file": "caddy-stable.list"}] }}'
  when:
    - ansible_facts["distribution"] == "Debian"
    - docker_services|selectattr("install_proxy")|select|list|length > 0

- name: Queue Linux packages needed for Docker
  set_fact:
    packages: '{{ packages | combine({"install": packages["install"] + ["docker-ce"]}) }}'
  when: ansible_facts["distribution"] != "Debian"

- name: Queue Debian packages needed for Docker
  set_fact:
    packages: '{{ packages | combine({"install": packages["install"] + ["docker.io"]}) }}'
  when: ansible_facts["distribution"] == "Debian"

- name: Queue docker-compose package
  set_fact:
    packages: '{{ packages | combine({"install": packages["install"] + ["docker-compose"]}) }}'
  when: ansible_facts["distribution"] != "CentOS"

- name: Queue SQLite for Fedora
  set_fact:
    packages: '{{ packages | combine({"install": packages["install"] + ["sqlite"]}) }}'
  when: ansible_facts["distribution"] != "Debian"

- name: Queue SQLite for Debian
  set_fact:
    packages: '{{ packages | combine({"install": packages["install"] + ["sqlite3"]}) }}'
  when: ansible_facts["distribution"] == "Debian"

- name: Queue caddy install if proxy is needed
  set_fact:
    packages: '{{ packages | combine({"install": packages["install"] + ["caddy"]}) }}'
  when: docker_services|selectattr("install_proxy")|select|list|length > 0

- name: 'Queue adding {{ user }} to Docker group'
  set_fact:
    unix_groups: '{{ unix_groups + ["docker"] }}'

- name: Include Docker service config role
  include_role:
    name: 'config/{{ item.service }}'
  vars:
    install_proxy: '{{ item.install_proxy }}'
    install_compose: '{{ item.install_compose }}'
  loop: '{{ docker_services }}'

- name: Queue Docker services for start
  set_fact:
    services: '{{ services | combine({"start": services["start"] + ["docker-compose@" + item.service ]}) }}'
  when: item.install_compose
  loop: '{{ docker_services }}'
